---
import GradientText from "$components/GradientText.astro";
import { COMMIT_HASH_SHORT } from "$consts";

interface Props {
    // Command to "execute"
    command: string;

    // Duration per key, in seconds
    keyDuration?: number;

    // Delay, in seconds
    delay?: number;
}

const { command, keyDuration = 0.03, delay = 0 } = Astro.props;
---

<div class="flex w-full flex-col">
    <code class="command flex w-max flex-row items-start space-x-2 font-mono">
        <p>
            <span class="ml-2 font-bold">
                <GradientText>cogsandsquigs</GradientText>
            </span>
            <span class="font-bold text-sky-500">
                ~{Astro.url.pathname}
            </span>
            on
            <span class="text-emerald-400"></span>
            @<span class="text-emerald-400"><a href={`https://github.com/cogsandsquigs/website/commit/${COMMIT_HASH_SHORT}`}>{COMMIT_HASH_SHORT}</a> ❯ </span>
        </p>
        <p class="typewriter">{command}</p>
    </code>

    <div class="command-output w-full">
        <slot />
    </div>
</div>

<style
    define:vars={{
        "text-len": command.length,
        "key-duration": keyDuration,
        duration: keyDuration * command.length,
        delay,
    }}
>
    .command {
        visibility: hidden;
        max-height: 0;
        animation: reveal 0s ease calc(var(--delay) * 1s) forwards;
    }

    .command-output {
        visibility: hidden;
        max-height: 0;
        animation: fade-in-bottom 0.5s ease
            calc((var(--delay) + var(--duration)) * 1s + 0.5s) forwards;
    }

    .typewriter {
        --blink-duration: 0.5;

        /* 
        * NOTE: Since we need these two variables for the calculation of the iteration value for the 
        * blink animation, we make them unitless (they are both in seconds).
        * Yes, this *is* a pain to deal with later.
        */

        overflow: hidden; /* Ensures the content is not revealed until the animation */
        border-right: 0.15 solid transparent; /* The typwriter cursor */
        white-space: nowrap; /* Keeps the content on a single line */
        margin: 0 auto; /* Gives that scrolling effect as the typing happens */
        /* letter-spacing: 0.15em; /* Adjust as needed */
        animation:
            typing calc(var(--duration) * 1s) steps(var(--text-len), end)
                calc(var(--delay) * 1s) forwards,
            blink-caret calc(var(--blink-duration) * 1s) step-end
                calc(var(--delay) * 1s)
                calc(round(up, var(--duration) / var(--blink-duration)));
    }

    /* NOTE: Used when pausing animation if we alr. viewed it*/

    @media (prefers-reduced-motion) {
        .typewriter {
            width: min-content;
            /* letter-spacing: 0.15em; /* Adjust as needed */
            animation: none;
        }
    }

    /* The typing effect */
    @keyframes typing {
        from {
            width: 0;
        }
        to {
            width: calc(var(--text-len) * 1ch);
        }
    }

    /* The typewriter cursor effect */
    @keyframes blink-caret {
        from,
        to {
            border-color: transparent;
        }
        50% {
            border-color: var(--color-primary);
        }
    }

    @keyframes reveal {
        from {
            visibility: hidden;
            max-height: 0;
        }
        to {
            visibility: visible;
            max-height: none;
        }
    }

    @keyframes fade-in-bottom {
        0% {
            visibility: visible;
            max-height: none;
            transform: translateY(20px);
            opacity: 0;
        }
        100% {
            visibility: visible;
            max-height: none;
            transform: translateY(0);
            opacity: 1;
        }
    }
</style>

<script>
    const KEY = "visited";
    // localStorage.setItem(KEY);
    const visited = new Set(JSON.parse(localStorage.getItem(KEY) ?? "[]"));
    const site = window.location.pathname;

    if (visited.has(site)) {
        for (let elem of document.querySelectorAll(
            ".typewriter, .command, .command-output",
        ) as NodeListOf<HTMLElement>) {
            elem.style.animation = "none";
            elem.style.visibility = "visible";
            elem.style.maxHeight = "none";
            elem.style.opacity = "1";
        }
    }

    // NOTE: This should be at the end!
    visited.add(site);
    localStorage.setItem(KEY, JSON.stringify([...visited]));
</script>
